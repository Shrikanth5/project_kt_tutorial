{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = {\n        id: 0,\n        // This will be updated when we fetch the user profile\n        email: action.payload.email,\n        name: action.payload.name,\n        roles: action.payload.roles,\n        enabled: true,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","id","email","roles","enabled","createdAt","Date","toISOString","updatedAt","setItem","loginFailure","logout","removeItem","actions","reducer"],"sources":["/home/ubuntu/Shri-Project/AI /project_kt_tutorial/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LoginResponse, User } from '../types/auth';\n\ninterface AuthState {\n    user: User | null;\n    token: string | null;\n    isAuthenticated: boolean;\n    loading: boolean;\n    error: string | null;\n}\n\nconst initialState: AuthState = {\n    user: null,\n    token: localStorage.getItem('token'),\n    isAuthenticated: !!localStorage.getItem('token'),\n    loading: false,\n    error: null,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        loginStart: (state) => {\n            state.loading = true;\n            state.error = null;\n        },\n        loginSuccess: (state, action: PayloadAction<LoginResponse>) => {\n            state.loading = false;\n            state.isAuthenticated = true;\n            state.token = action.payload.token;\n            state.user = {\n                id: 0, // This will be updated when we fetch the user profile\n                email: action.payload.email,\n                name: action.payload.name,\n                roles: action.payload.roles,\n                enabled: true,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString(),\n            };\n            localStorage.setItem('token', action.payload.token);\n        },\n        loginFailure: (state, action: PayloadAction<string>) => {\n            state.loading = false;\n            state.error = action.payload;\n        },\n        logout: (state) => {\n            state.user = null;\n            state.token = null;\n            state.isAuthenticated = false;\n            localStorage.removeItem('token');\n        },\n    },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAW7D,MAAMC,YAAuB,GAAG;EAC5BC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChDE,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC1BU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAoC,KAAK;MAC3DF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACV,KAAK,GAAGY,MAAM,CAACC,OAAO,CAACb,KAAK;MAClCU,KAAK,CAACX,IAAI,GAAG;QACTe,EAAE,EAAE,CAAC;QAAE;QACPC,KAAK,EAAEH,MAAM,CAACC,OAAO,CAACE,KAAK;QAC3BR,IAAI,EAAEK,MAAM,CAACC,OAAO,CAACN,IAAI;QACzBS,KAAK,EAAEJ,MAAM,CAACC,OAAO,CAACG,KAAK;QAC3BC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC,CAAC;MACDnB,YAAY,CAACqB,OAAO,CAAC,OAAO,EAAEV,MAAM,CAACC,OAAO,CAACb,KAAK,CAAC;IACvD,CAAC;IACDuB,YAAY,EAAEA,CAACb,KAAK,EAAEE,MAA6B,KAAK;MACpDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDW,MAAM,EAAGd,KAAK,IAAK;MACfA,KAAK,CAACX,IAAI,GAAG,IAAI;MACjBW,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BF,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;IACpC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEhB,UAAU;EAAEE,YAAY;EAAEY,YAAY;EAAEC;AAAO,CAAC,GAAGlB,SAAS,CAACoB,OAAO;AACnF,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
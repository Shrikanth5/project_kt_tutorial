{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async data => {\n    const response = await api.post('/auth/login', data);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authService","login","data","response","post","register","logout","removeItem"],"sources":["/home/ubuntu/Shri-Project/AI /project_kt_tutorial/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { LoginRequest, LoginResponse, User } from '../types/auth';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport const authService = {\n    login: async (data: LoginRequest): Promise<LoginResponse> => {\n        const response = await api.post<LoginResponse>('/auth/login', data);\n        return response.data;\n    },\n\n    register: async (data: User): Promise<User> => {\n        const response = await api.post<User>('/auth/register', data);\n        return response.data;\n    },\n\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n    },\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACrBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACvBC,KAAK,EAAE,MAAOC,IAAkB,IAA6B;IACzD,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAgB,aAAa,EAAEF,IAAI,CAAC;IACnE,OAAOC,QAAQ,CAACD,IAAI;EACxB,CAAC;EAEDG,QAAQ,EAAE,MAAOH,IAAU,IAAoB;IAC3C,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAO,gBAAgB,EAAEF,IAAI,CAAC;IAC7D,OAAOC,QAAQ,CAACD,IAAI;EACxB,CAAC;EAEDI,MAAM,EAAEA,CAAA,KAAM;IACVZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;EACnC;AACJ,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Shri-Project/AI /project_kt_tutorial/frontend/src/components/PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../services/auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const isAuthenticated = authService.isAuthenticated();\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","authService","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","children","_s","location","isAuthenticated","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ubuntu/Shri-Project/AI /project_kt_tutorial/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../services/auth';\n\ninterface PrivateRouteProps {\n    children: React.ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n    const location = useLocation();\n    const isAuthenticated = authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n        return <Navigate to=\"/login\" state={{ from: location }} replace />;\n    }\n\n    return <>{children}</>;\n};\n\nexport default PrivateRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM/C,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,eAAe,GAAGT,WAAW,CAACS,eAAe,CAAC,CAAC;EAErD,IAAI,CAACA,eAAe,EAAE;IAClB,oBAAOP,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEJ;MAAS,CAAE;MAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE;EAEA,oBAAOf,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B,CAAC;AAACC,EAAA,CATIF,YAAyC;EAAA,QAC1BN,WAAW;AAAA;AAAAmB,EAAA,GAD1Bb,YAAyC;AAW/C,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}